// ///////////////////////////////////////////////////
// Game File System Documentation  
// //////////////////////////////////////////////////
			
// //////////////////////////////////////////////////
// Project Setup
// //////////////////////////////////////////////////
// Purpose:
//  The Pistonworks engine is very easy to set up a 
//  project in due to its easy to use file system.
//  All you have to do as the end user is to make
//  sure all of your files are within the proper
//  directories. All of the directories are within 
//  the game folder which will contain your project.
//  Any and all of these directories can have sub-
//  directories at the cost of file finding speed.
// //////////////////////////////////////////////////
// Directories: 7
// (1) animations;
// Purpose:
//  This first directory is quite simple. It holds
//  all sprite-sheet animations and normal animated 
//  file animations.
// (2) code;
// Purpose:
//  Holds all of the compilable code for your game.
//  This can only be C++ and may interact with the
//  engine though specific access functions and
//  overloading of pw::co::Engine_Control functions.
// (3) data;
// Purpose:
//  Holds all of the scene data for each one of your
//  scenes. You can sort scene data how ever you
//  you want.
// (4) fonts;
// Purpose:
//  Custom fonts to be loaded by the engine. The
//  font must be of a standard font type and must
//  be loaded / added before the project runs.
// (5) icon;
// Purpose:
//  This directory is for all of the application
//  icons you want to use. These files must be a
//  png.
// (6) linker_files;
// Purpose:
//  linker_files is a special directory which
//  controls your games main function. It loads
//  all relevant directory data and all data
//  needed for your game to run.
// (7) textures;
// Purpose:
//  This directory holds all of your textures you
//  will use for your game. This includes all
//  supported file types.
// //////////////////////////////////////////////////

// //////////////////////////////////////////////////
// File: PWProject.csv
// //////////////////////////////////////////////////
// Purpose:
//  Entry point to the program. The name must be
//  PWProject. It contains the project's name and the
//  name of the first scene that will be loaded and 
//  ran. If either parameters are left NULL then the
//  program will terminate.
// //////////////////////////////////////////////////
// Contents: 2
// (1) Project_Name;
// Purpose:
// The project name is the name of the project that
// is being loaded.
// (2) First_Scene;
// Purpose:
// The name of the first scene file that will be
// loaded.
// //////////////////////////////////////////////////
			
// //////////////////////////////////////////////////
// File: "Some Scene Name".csv
// //////////////////////////////////////////////////
// Purpose:
//  To hold the information for one of the engine's
//  scenes. It hold information about which files
//  contain the data, input, events and finally 
//  cut-scenes.
// //////////////////////////////////////////////////
// Contents: 2
// (1) Project_Name;
// Purpose:
// The project name is the name of the project that
// is being loaded.
// (2) First_Scene;
// Purpose:
// The name of the first scene file that will be
// loaded.
// //////////////////////////////////////////////////